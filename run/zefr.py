# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_zefr', [dirname(__file__)])
        except ImportError:
            import _zefr
            return _zefr
        if fp is not None:
            try:
                _mod = imp.load_module('_zefr', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _zefr = swig_import_helper()
    del swig_import_helper
else:
    import _zefr
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


STATIC = _zefr.STATIC
TEST1 = _zefr.TEST1
TEST2 = _zefr.TEST2
TEST3 = _zefr.TEST3
CIRCULAR_TRANS = _zefr.CIRCULAR_TRANS
RADIAL_VIBE = _zefr.RADIAL_VIBE
RIGID_BODY = _zefr.RIGID_BODY
class Timer(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Timer, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Timer, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _zefr.new_Timer(*args)
        try: self.this.append(this)
        except: self.this = this
    def setPrefix(self, *args): return _zefr.Timer_setPrefix(self, *args)
    def startTimer(self): return _zefr.Timer_startTimer(self)
    def stopTimer(self): return _zefr.Timer_stopTimer(self)
    def resetTimer(self): return _zefr.Timer_resetTimer(self)
    def getTime(self): return _zefr.Timer_getTime(self)
    def showTime(self, precision=2): return _zefr.Timer_showTime(self, precision)
    __swig_destroy__ = _zefr.delete_Timer
    __del__ = lambda self : None;
Timer_swigregister = _zefr.Timer_swigregister
Timer_swigregister(Timer)

class DataStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DataStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DataStruct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["forces"] = _zefr.DataStruct_forces_set
    __swig_getmethods__["forces"] = _zefr.DataStruct_forces_get
    if _newclass:forces = _swig_property(_zefr.DataStruct_forces_get, _zefr.DataStruct_forces_set)
    __swig_setmethods__["nspts"] = _zefr.DataStruct_nspts_set
    __swig_getmethods__["nspts"] = _zefr.DataStruct_nspts_get
    if _newclass:nspts = _swig_property(_zefr.DataStruct_nspts_get, _zefr.DataStruct_nspts_set)
    __swig_setmethods__["nfields"] = _zefr.DataStruct_nfields_set
    __swig_getmethods__["nfields"] = _zefr.DataStruct_nfields_get
    if _newclass:nfields = _swig_property(_zefr.DataStruct_nfields_get, _zefr.DataStruct_nfields_set)
    __swig_setmethods__["u_spts"] = _zefr.DataStruct_u_spts_set
    __swig_getmethods__["u_spts"] = _zefr.DataStruct_u_spts_get
    if _newclass:u_spts = _swig_property(_zefr.DataStruct_u_spts_get, _zefr.DataStruct_u_spts_set)
    __swig_setmethods__["du_spts"] = _zefr.DataStruct_du_spts_set
    __swig_getmethods__["du_spts"] = _zefr.DataStruct_du_spts_get
    if _newclass:du_spts = _swig_property(_zefr.DataStruct_du_spts_get, _zefr.DataStruct_du_spts_set)
    def __init__(self): 
        this = _zefr.new_DataStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _zefr.delete_DataStruct
    __del__ = lambda self : None;
DataStruct_swigregister = _zefr.DataStruct_swigregister
DataStruct_swigregister(DataStruct)

class InputStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, InputStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, InputStruct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["equation"] = _zefr.InputStruct_equation_set
    __swig_getmethods__["equation"] = _zefr.InputStruct_equation_get
    if _newclass:equation = _swig_property(_zefr.InputStruct_equation_get, _zefr.InputStruct_equation_set)
    __swig_setmethods__["dt_type"] = _zefr.InputStruct_dt_type_set
    __swig_getmethods__["dt_type"] = _zefr.InputStruct_dt_type_get
    if _newclass:dt_type = _swig_property(_zefr.InputStruct_dt_type_get, _zefr.InputStruct_dt_type_set)
    __swig_setmethods__["CFL_type"] = _zefr.InputStruct_CFL_type_set
    __swig_getmethods__["CFL_type"] = _zefr.InputStruct_CFL_type_get
    if _newclass:CFL_type = _swig_property(_zefr.InputStruct_CFL_type_get, _zefr.InputStruct_CFL_type_set)
    __swig_setmethods__["ic_type"] = _zefr.InputStruct_ic_type_set
    __swig_getmethods__["ic_type"] = _zefr.InputStruct_ic_type_get
    if _newclass:ic_type = _swig_property(_zefr.InputStruct_ic_type_get, _zefr.InputStruct_ic_type_set)
    __swig_setmethods__["nDims"] = _zefr.InputStruct_nDims_set
    __swig_getmethods__["nDims"] = _zefr.InputStruct_nDims_get
    if _newclass:nDims = _swig_property(_zefr.InputStruct_nDims_get, _zefr.InputStruct_nDims_set)
    __swig_setmethods__["nQpts1D"] = _zefr.InputStruct_nQpts1D_set
    __swig_getmethods__["nQpts1D"] = _zefr.InputStruct_nQpts1D_get
    if _newclass:nQpts1D = _swig_property(_zefr.InputStruct_nQpts1D_get, _zefr.InputStruct_nQpts1D_set)
    __swig_setmethods__["n_steps"] = _zefr.InputStruct_n_steps_set
    __swig_getmethods__["n_steps"] = _zefr.InputStruct_n_steps_get
    if _newclass:n_steps = _swig_property(_zefr.InputStruct_n_steps_get, _zefr.InputStruct_n_steps_set)
    __swig_setmethods__["order"] = _zefr.InputStruct_order_set
    __swig_getmethods__["order"] = _zefr.InputStruct_order_get
    if _newclass:order = _swig_property(_zefr.InputStruct_order_get, _zefr.InputStruct_order_set)
    __swig_setmethods__["report_freq"] = _zefr.InputStruct_report_freq_set
    __swig_getmethods__["report_freq"] = _zefr.InputStruct_report_freq_get
    if _newclass:report_freq = _swig_property(_zefr.InputStruct_report_freq_get, _zefr.InputStruct_report_freq_set)
    __swig_setmethods__["write_freq"] = _zefr.InputStruct_write_freq_set
    __swig_getmethods__["write_freq"] = _zefr.InputStruct_write_freq_get
    if _newclass:write_freq = _swig_property(_zefr.InputStruct_write_freq_get, _zefr.InputStruct_write_freq_set)
    __swig_setmethods__["force_freq"] = _zefr.InputStruct_force_freq_set
    __swig_getmethods__["force_freq"] = _zefr.InputStruct_force_freq_get
    if _newclass:force_freq = _swig_property(_zefr.InputStruct_force_freq_get, _zefr.InputStruct_force_freq_set)
    __swig_setmethods__["turb_stat_freq"] = _zefr.InputStruct_turb_stat_freq_set
    __swig_getmethods__["turb_stat_freq"] = _zefr.InputStruct_turb_stat_freq_get
    if _newclass:turb_stat_freq = _swig_property(_zefr.InputStruct_turb_stat_freq_get, _zefr.InputStruct_turb_stat_freq_set)
    __swig_setmethods__["res_type"] = _zefr.InputStruct_res_type_set
    __swig_getmethods__["res_type"] = _zefr.InputStruct_res_type_get
    if _newclass:res_type = _swig_property(_zefr.InputStruct_res_type_get, _zefr.InputStruct_res_type_set)
    __swig_setmethods__["error_freq"] = _zefr.InputStruct_error_freq_set
    __swig_getmethods__["error_freq"] = _zefr.InputStruct_error_freq_get
    if _newclass:error_freq = _swig_property(_zefr.InputStruct_error_freq_get, _zefr.InputStruct_error_freq_set)
    __swig_setmethods__["test_case"] = _zefr.InputStruct_test_case_set
    __swig_getmethods__["test_case"] = _zefr.InputStruct_test_case_get
    if _newclass:test_case = _swig_property(_zefr.InputStruct_test_case_get, _zefr.InputStruct_test_case_set)
    __swig_setmethods__["err_field"] = _zefr.InputStruct_err_field_set
    __swig_getmethods__["err_field"] = _zefr.InputStruct_err_field_get
    if _newclass:err_field = _swig_property(_zefr.InputStruct_err_field_get, _zefr.InputStruct_err_field_set)
    __swig_setmethods__["FMG_vcycles"] = _zefr.InputStruct_FMG_vcycles_set
    __swig_getmethods__["FMG_vcycles"] = _zefr.InputStruct_FMG_vcycles_get
    if _newclass:FMG_vcycles = _swig_property(_zefr.InputStruct_FMG_vcycles_get, _zefr.InputStruct_FMG_vcycles_set)
    __swig_setmethods__["output_prefix"] = _zefr.InputStruct_output_prefix_set
    __swig_getmethods__["output_prefix"] = _zefr.InputStruct_output_prefix_get
    if _newclass:output_prefix = _swig_property(_zefr.InputStruct_output_prefix_get, _zefr.InputStruct_output_prefix_set)
    __swig_setmethods__["meshfile"] = _zefr.InputStruct_meshfile_set
    __swig_getmethods__["meshfile"] = _zefr.InputStruct_meshfile_get
    if _newclass:meshfile = _swig_property(_zefr.InputStruct_meshfile_get, _zefr.InputStruct_meshfile_set)
    __swig_setmethods__["spt_type"] = _zefr.InputStruct_spt_type_set
    __swig_getmethods__["spt_type"] = _zefr.InputStruct_spt_type_get
    if _newclass:spt_type = _swig_property(_zefr.InputStruct_spt_type_get, _zefr.InputStruct_spt_type_set)
    __swig_setmethods__["dt_scheme"] = _zefr.InputStruct_dt_scheme_set
    __swig_getmethods__["dt_scheme"] = _zefr.InputStruct_dt_scheme_get
    if _newclass:dt_scheme = _swig_property(_zefr.InputStruct_dt_scheme_get, _zefr.InputStruct_dt_scheme_set)
    __swig_setmethods__["restart_file"] = _zefr.InputStruct_restart_file_set
    __swig_getmethods__["restart_file"] = _zefr.InputStruct_restart_file_get
    if _newclass:restart_file = _swig_property(_zefr.InputStruct_restart_file_get, _zefr.InputStruct_restart_file_set)
    __swig_setmethods__["mg_cycle"] = _zefr.InputStruct_mg_cycle_set
    __swig_getmethods__["mg_cycle"] = _zefr.InputStruct_mg_cycle_get
    if _newclass:mg_cycle = _swig_property(_zefr.InputStruct_mg_cycle_get, _zefr.InputStruct_mg_cycle_set)
    __swig_setmethods__["viscous"] = _zefr.InputStruct_viscous_set
    __swig_getmethods__["viscous"] = _zefr.InputStruct_viscous_get
    if _newclass:viscous = _swig_property(_zefr.InputStruct_viscous_get, _zefr.InputStruct_viscous_set)
    __swig_setmethods__["p_multi"] = _zefr.InputStruct_p_multi_set
    __swig_getmethods__["p_multi"] = _zefr.InputStruct_p_multi_get
    if _newclass:p_multi = _swig_property(_zefr.InputStruct_p_multi_get, _zefr.InputStruct_p_multi_set)
    __swig_setmethods__["restart"] = _zefr.InputStruct_restart_set
    __swig_getmethods__["restart"] = _zefr.InputStruct_restart_get
    if _newclass:restart = _swig_property(_zefr.InputStruct_restart_get, _zefr.InputStruct_restart_set)
    __swig_setmethods__["fix_vis"] = _zefr.InputStruct_fix_vis_set
    __swig_getmethods__["fix_vis"] = _zefr.InputStruct_fix_vis_get
    if _newclass:fix_vis = _swig_property(_zefr.InputStruct_fix_vis_get, _zefr.InputStruct_fix_vis_set)
    __swig_setmethods__["squeeze"] = _zefr.InputStruct_squeeze_set
    __swig_getmethods__["squeeze"] = _zefr.InputStruct_squeeze_get
    if _newclass:squeeze = _swig_property(_zefr.InputStruct_squeeze_get, _zefr.InputStruct_squeeze_set)
    __swig_setmethods__["source"] = _zefr.InputStruct_source_set
    __swig_getmethods__["source"] = _zefr.InputStruct_source_get
    if _newclass:source = _swig_property(_zefr.InputStruct_source_get, _zefr.InputStruct_source_set)
    __swig_setmethods__["grad_via_div"] = _zefr.InputStruct_grad_via_div_set
    __swig_getmethods__["grad_via_div"] = _zefr.InputStruct_grad_via_div_get
    if _newclass:grad_via_div = _swig_property(_zefr.InputStruct_grad_via_div_get, _zefr.InputStruct_grad_via_div_set)
    __swig_setmethods__["disable_nondim"] = _zefr.InputStruct_disable_nondim_set
    __swig_getmethods__["disable_nondim"] = _zefr.InputStruct_disable_nondim_get
    if _newclass:disable_nondim = _swig_property(_zefr.InputStruct_disable_nondim_get, _zefr.InputStruct_disable_nondim_set)
    __swig_setmethods__["adapt_dt"] = _zefr.InputStruct_adapt_dt_set
    __swig_getmethods__["adapt_dt"] = _zefr.InputStruct_adapt_dt_get
    if _newclass:adapt_dt = _swig_property(_zefr.InputStruct_adapt_dt_get, _zefr.InputStruct_adapt_dt_set)
    __swig_setmethods__["mg_levels"] = _zefr.InputStruct_mg_levels_set
    __swig_getmethods__["mg_levels"] = _zefr.InputStruct_mg_levels_get
    if _newclass:mg_levels = _swig_property(_zefr.InputStruct_mg_levels_get, _zefr.InputStruct_mg_levels_set)
    __swig_setmethods__["mg_steps"] = _zefr.InputStruct_mg_steps_set
    __swig_getmethods__["mg_steps"] = _zefr.InputStruct_mg_steps_get
    if _newclass:mg_steps = _swig_property(_zefr.InputStruct_mg_steps_get, _zefr.InputStruct_mg_steps_set)
    __swig_setmethods__["fconv_type"] = _zefr.InputStruct_fconv_type_set
    __swig_getmethods__["fconv_type"] = _zefr.InputStruct_fconv_type_get
    if _newclass:fconv_type = _swig_property(_zefr.InputStruct_fconv_type_get, _zefr.InputStruct_fconv_type_set)
    __swig_setmethods__["fvisc_type"] = _zefr.InputStruct_fvisc_type_set
    __swig_getmethods__["fvisc_type"] = _zefr.InputStruct_fvisc_type_get
    if _newclass:fvisc_type = _swig_property(_zefr.InputStruct_fvisc_type_get, _zefr.InputStruct_fvisc_type_set)
    __swig_setmethods__["rus_k"] = _zefr.InputStruct_rus_k_set
    __swig_getmethods__["rus_k"] = _zefr.InputStruct_rus_k_get
    if _newclass:rus_k = _swig_property(_zefr.InputStruct_rus_k_get, _zefr.InputStruct_rus_k_set)
    __swig_setmethods__["ldg_b"] = _zefr.InputStruct_ldg_b_set
    __swig_getmethods__["ldg_b"] = _zefr.InputStruct_ldg_b_get
    if _newclass:ldg_b = _swig_property(_zefr.InputStruct_ldg_b_get, _zefr.InputStruct_ldg_b_set)
    __swig_setmethods__["ldg_tau"] = _zefr.InputStruct_ldg_tau_set
    __swig_getmethods__["ldg_tau"] = _zefr.InputStruct_ldg_tau_get
    if _newclass:ldg_tau = _swig_property(_zefr.InputStruct_ldg_tau_get, _zefr.InputStruct_ldg_tau_set)
    __swig_setmethods__["AdvDiff_D"] = _zefr.InputStruct_AdvDiff_D_set
    __swig_getmethods__["AdvDiff_D"] = _zefr.InputStruct_AdvDiff_D_get
    if _newclass:AdvDiff_D = _swig_property(_zefr.InputStruct_AdvDiff_D_get, _zefr.InputStruct_AdvDiff_D_set)
    __swig_setmethods__["dt"] = _zefr.InputStruct_dt_set
    __swig_getmethods__["dt"] = _zefr.InputStruct_dt_get
    if _newclass:dt = _swig_property(_zefr.InputStruct_dt_get, _zefr.InputStruct_dt_set)
    __swig_setmethods__["res_tol"] = _zefr.InputStruct_res_tol_set
    __swig_getmethods__["res_tol"] = _zefr.InputStruct_res_tol_get
    if _newclass:res_tol = _swig_property(_zefr.InputStruct_res_tol_get, _zefr.InputStruct_res_tol_set)
    __swig_setmethods__["CFL"] = _zefr.InputStruct_CFL_set
    __swig_getmethods__["CFL"] = _zefr.InputStruct_CFL_get
    if _newclass:CFL = _swig_property(_zefr.InputStruct_CFL_get, _zefr.InputStruct_CFL_set)
    __swig_setmethods__["rel_fac"] = _zefr.InputStruct_rel_fac_set
    __swig_getmethods__["rel_fac"] = _zefr.InputStruct_rel_fac_get
    if _newclass:rel_fac = _swig_property(_zefr.InputStruct_rel_fac_get, _zefr.InputStruct_rel_fac_set)
    __swig_setmethods__["AdvDiff_A"] = _zefr.InputStruct_AdvDiff_A_set
    __swig_getmethods__["AdvDiff_A"] = _zefr.InputStruct_AdvDiff_A_get
    if _newclass:AdvDiff_A = _swig_property(_zefr.InputStruct_AdvDiff_A_get, _zefr.InputStruct_AdvDiff_A_set)
    __swig_setmethods__["V_fs"] = _zefr.InputStruct_V_fs_set
    __swig_getmethods__["V_fs"] = _zefr.InputStruct_V_fs_get
    if _newclass:V_fs = _swig_property(_zefr.InputStruct_V_fs_get, _zefr.InputStruct_V_fs_set)
    __swig_setmethods__["norm_fs"] = _zefr.InputStruct_norm_fs_set
    __swig_getmethods__["norm_fs"] = _zefr.InputStruct_norm_fs_get
    if _newclass:norm_fs = _swig_property(_zefr.InputStruct_norm_fs_get, _zefr.InputStruct_norm_fs_set)
    __swig_setmethods__["V_wall"] = _zefr.InputStruct_V_wall_set
    __swig_getmethods__["V_wall"] = _zefr.InputStruct_V_wall_get
    if _newclass:V_wall = _swig_property(_zefr.InputStruct_V_wall_get, _zefr.InputStruct_V_wall_set)
    __swig_setmethods__["norm_wall"] = _zefr.InputStruct_norm_wall_set
    __swig_getmethods__["norm_wall"] = _zefr.InputStruct_norm_wall_get
    if _newclass:norm_wall = _swig_property(_zefr.InputStruct_norm_wall_get, _zefr.InputStruct_norm_wall_set)
    __swig_setmethods__["T_gas"] = _zefr.InputStruct_T_gas_set
    __swig_getmethods__["T_gas"] = _zefr.InputStruct_T_gas_get
    if _newclass:T_gas = _swig_property(_zefr.InputStruct_T_gas_get, _zefr.InputStruct_T_gas_set)
    __swig_setmethods__["gamma"] = _zefr.InputStruct_gamma_set
    __swig_getmethods__["gamma"] = _zefr.InputStruct_gamma_get
    if _newclass:gamma = _swig_property(_zefr.InputStruct_gamma_get, _zefr.InputStruct_gamma_set)
    __swig_setmethods__["prandtl"] = _zefr.InputStruct_prandtl_set
    __swig_getmethods__["prandtl"] = _zefr.InputStruct_prandtl_get
    if _newclass:prandtl = _swig_property(_zefr.InputStruct_prandtl_get, _zefr.InputStruct_prandtl_set)
    __swig_setmethods__["mu"] = _zefr.InputStruct_mu_set
    __swig_getmethods__["mu"] = _zefr.InputStruct_mu_get
    if _newclass:mu = _swig_property(_zefr.InputStruct_mu_get, _zefr.InputStruct_mu_set)
    __swig_setmethods__["R"] = _zefr.InputStruct_R_set
    __swig_getmethods__["R"] = _zefr.InputStruct_R_get
    if _newclass:R = _swig_property(_zefr.InputStruct_R_get, _zefr.InputStruct_R_set)
    __swig_setmethods__["S"] = _zefr.InputStruct_S_set
    __swig_getmethods__["S"] = _zefr.InputStruct_S_get
    if _newclass:S = _swig_property(_zefr.InputStruct_S_get, _zefr.InputStruct_S_set)
    __swig_setmethods__["rho_fs"] = _zefr.InputStruct_rho_fs_set
    __swig_getmethods__["rho_fs"] = _zefr.InputStruct_rho_fs_get
    if _newclass:rho_fs = _swig_property(_zefr.InputStruct_rho_fs_get, _zefr.InputStruct_rho_fs_set)
    __swig_setmethods__["u_fs"] = _zefr.InputStruct_u_fs_set
    __swig_getmethods__["u_fs"] = _zefr.InputStruct_u_fs_get
    if _newclass:u_fs = _swig_property(_zefr.InputStruct_u_fs_get, _zefr.InputStruct_u_fs_set)
    __swig_setmethods__["v_mag_fs"] = _zefr.InputStruct_v_mag_fs_set
    __swig_getmethods__["v_mag_fs"] = _zefr.InputStruct_v_mag_fs_get
    if _newclass:v_mag_fs = _swig_property(_zefr.InputStruct_v_mag_fs_get, _zefr.InputStruct_v_mag_fs_set)
    __swig_setmethods__["P_fs"] = _zefr.InputStruct_P_fs_set
    __swig_getmethods__["P_fs"] = _zefr.InputStruct_P_fs_get
    if _newclass:P_fs = _swig_property(_zefr.InputStruct_P_fs_get, _zefr.InputStruct_P_fs_set)
    __swig_setmethods__["mach_fs"] = _zefr.InputStruct_mach_fs_set
    __swig_getmethods__["mach_fs"] = _zefr.InputStruct_mach_fs_get
    if _newclass:mach_fs = _swig_property(_zefr.InputStruct_mach_fs_get, _zefr.InputStruct_mach_fs_set)
    __swig_setmethods__["L_fs"] = _zefr.InputStruct_L_fs_set
    __swig_getmethods__["L_fs"] = _zefr.InputStruct_L_fs_get
    if _newclass:L_fs = _swig_property(_zefr.InputStruct_L_fs_get, _zefr.InputStruct_L_fs_set)
    __swig_setmethods__["T_fs"] = _zefr.InputStruct_T_fs_set
    __swig_getmethods__["T_fs"] = _zefr.InputStruct_T_fs_get
    if _newclass:T_fs = _swig_property(_zefr.InputStruct_T_fs_get, _zefr.InputStruct_T_fs_set)
    __swig_setmethods__["Re_fs"] = _zefr.InputStruct_Re_fs_set
    __swig_getmethods__["Re_fs"] = _zefr.InputStruct_Re_fs_get
    if _newclass:Re_fs = _swig_property(_zefr.InputStruct_Re_fs_get, _zefr.InputStruct_Re_fs_set)
    __swig_setmethods__["nx_fs"] = _zefr.InputStruct_nx_fs_set
    __swig_getmethods__["nx_fs"] = _zefr.InputStruct_nx_fs_get
    if _newclass:nx_fs = _swig_property(_zefr.InputStruct_nx_fs_get, _zefr.InputStruct_nx_fs_set)
    __swig_setmethods__["ny_fs"] = _zefr.InputStruct_ny_fs_set
    __swig_getmethods__["ny_fs"] = _zefr.InputStruct_ny_fs_get
    if _newclass:ny_fs = _swig_property(_zefr.InputStruct_ny_fs_get, _zefr.InputStruct_ny_fs_set)
    __swig_setmethods__["T_tot_fs"] = _zefr.InputStruct_T_tot_fs_set
    __swig_getmethods__["T_tot_fs"] = _zefr.InputStruct_T_tot_fs_get
    if _newclass:T_tot_fs = _swig_property(_zefr.InputStruct_T_tot_fs_get, _zefr.InputStruct_T_tot_fs_set)
    __swig_setmethods__["P_tot_fs"] = _zefr.InputStruct_P_tot_fs_set
    __swig_getmethods__["P_tot_fs"] = _zefr.InputStruct_P_tot_fs_get
    if _newclass:P_tot_fs = _swig_property(_zefr.InputStruct_P_tot_fs_get, _zefr.InputStruct_P_tot_fs_set)
    __swig_setmethods__["mach_wall"] = _zefr.InputStruct_mach_wall_set
    __swig_getmethods__["mach_wall"] = _zefr.InputStruct_mach_wall_get
    if _newclass:mach_wall = _swig_property(_zefr.InputStruct_mach_wall_get, _zefr.InputStruct_mach_wall_set)
    __swig_setmethods__["T_wall"] = _zefr.InputStruct_T_wall_set
    __swig_getmethods__["T_wall"] = _zefr.InputStruct_T_wall_get
    if _newclass:T_wall = _swig_property(_zefr.InputStruct_T_wall_get, _zefr.InputStruct_T_wall_set)
    __swig_setmethods__["nx_wall"] = _zefr.InputStruct_nx_wall_set
    __swig_getmethods__["nx_wall"] = _zefr.InputStruct_nx_wall_get
    if _newclass:nx_wall = _swig_property(_zefr.InputStruct_nx_wall_get, _zefr.InputStruct_nx_wall_set)
    __swig_setmethods__["ny_wall"] = _zefr.InputStruct_ny_wall_set
    __swig_getmethods__["ny_wall"] = _zefr.InputStruct_ny_wall_get
    if _newclass:ny_wall = _swig_property(_zefr.InputStruct_ny_wall_get, _zefr.InputStruct_ny_wall_set)
    __swig_setmethods__["u_wall"] = _zefr.InputStruct_u_wall_set
    __swig_getmethods__["u_wall"] = _zefr.InputStruct_u_wall_get
    if _newclass:u_wall = _swig_property(_zefr.InputStruct_u_wall_get, _zefr.InputStruct_u_wall_set)
    __swig_setmethods__["v_wall"] = _zefr.InputStruct_v_wall_set
    __swig_getmethods__["v_wall"] = _zefr.InputStruct_v_wall_get
    if _newclass:v_wall = _swig_property(_zefr.InputStruct_v_wall_get, _zefr.InputStruct_v_wall_set)
    __swig_setmethods__["T_ref"] = _zefr.InputStruct_T_ref_set
    __swig_getmethods__["T_ref"] = _zefr.InputStruct_T_ref_get
    if _newclass:T_ref = _swig_property(_zefr.InputStruct_T_ref_get, _zefr.InputStruct_T_ref_set)
    __swig_setmethods__["P_ref"] = _zefr.InputStruct_P_ref_set
    __swig_getmethods__["P_ref"] = _zefr.InputStruct_P_ref_get
    if _newclass:P_ref = _swig_property(_zefr.InputStruct_P_ref_get, _zefr.InputStruct_P_ref_set)
    __swig_setmethods__["rho_ref"] = _zefr.InputStruct_rho_ref_set
    __swig_getmethods__["rho_ref"] = _zefr.InputStruct_rho_ref_get
    if _newclass:rho_ref = _swig_property(_zefr.InputStruct_rho_ref_get, _zefr.InputStruct_rho_ref_set)
    __swig_setmethods__["mu_ref"] = _zefr.InputStruct_mu_ref_set
    __swig_getmethods__["mu_ref"] = _zefr.InputStruct_mu_ref_get
    if _newclass:mu_ref = _swig_property(_zefr.InputStruct_mu_ref_get, _zefr.InputStruct_mu_ref_set)
    __swig_setmethods__["time_ref"] = _zefr.InputStruct_time_ref_set
    __swig_getmethods__["time_ref"] = _zefr.InputStruct_time_ref_get
    if _newclass:time_ref = _swig_property(_zefr.InputStruct_time_ref_get, _zefr.InputStruct_time_ref_set)
    __swig_setmethods__["R_ref"] = _zefr.InputStruct_R_ref_set
    __swig_getmethods__["R_ref"] = _zefr.InputStruct_R_ref_get
    if _newclass:R_ref = _swig_property(_zefr.InputStruct_R_ref_get, _zefr.InputStruct_R_ref_set)
    __swig_setmethods__["c_sth"] = _zefr.InputStruct_c_sth_set
    __swig_getmethods__["c_sth"] = _zefr.InputStruct_c_sth_get
    if _newclass:c_sth = _swig_property(_zefr.InputStruct_c_sth_get, _zefr.InputStruct_c_sth_set)
    __swig_setmethods__["rt"] = _zefr.InputStruct_rt_set
    __swig_getmethods__["rt"] = _zefr.InputStruct_rt_get
    if _newclass:rt = _swig_property(_zefr.InputStruct_rt_get, _zefr.InputStruct_rt_set)
    __swig_setmethods__["exps0"] = _zefr.InputStruct_exps0_set
    __swig_getmethods__["exps0"] = _zefr.InputStruct_exps0_get
    if _newclass:exps0 = _swig_property(_zefr.InputStruct_exps0_get, _zefr.InputStruct_exps0_set)
    __swig_setmethods__["s_factor"] = _zefr.InputStruct_s_factor_set
    __swig_getmethods__["s_factor"] = _zefr.InputStruct_s_factor_get
    if _newclass:s_factor = _swig_property(_zefr.InputStruct_s_factor_get, _zefr.InputStruct_s_factor_set)
    __swig_setmethods__["rank"] = _zefr.InputStruct_rank_set
    __swig_getmethods__["rank"] = _zefr.InputStruct_rank_get
    if _newclass:rank = _swig_property(_zefr.InputStruct_rank_get, _zefr.InputStruct_rank_set)
    __swig_setmethods__["nRanks"] = _zefr.InputStruct_nRanks_set
    __swig_getmethods__["nRanks"] = _zefr.InputStruct_nRanks_get
    if _newclass:nRanks = _swig_property(_zefr.InputStruct_nRanks_get, _zefr.InputStruct_nRanks_set)
    __swig_setmethods__["grank"] = _zefr.InputStruct_grank_set
    __swig_getmethods__["grank"] = _zefr.InputStruct_grank_get
    if _newclass:grank = _swig_property(_zefr.InputStruct_grank_get, _zefr.InputStruct_grank_set)
    __swig_setmethods__["filt_on"] = _zefr.InputStruct_filt_on_set
    __swig_getmethods__["filt_on"] = _zefr.InputStruct_filt_on_get
    if _newclass:filt_on = _swig_property(_zefr.InputStruct_filt_on_get, _zefr.InputStruct_filt_on_set)
    __swig_setmethods__["sen_write"] = _zefr.InputStruct_sen_write_set
    __swig_getmethods__["sen_write"] = _zefr.InputStruct_sen_write_get
    if _newclass:sen_write = _swig_property(_zefr.InputStruct_sen_write_get, _zefr.InputStruct_sen_write_set)
    __swig_setmethods__["sen_norm"] = _zefr.InputStruct_sen_norm_set
    __swig_getmethods__["sen_norm"] = _zefr.InputStruct_sen_norm_get
    if _newclass:sen_norm = _swig_property(_zefr.InputStruct_sen_norm_get, _zefr.InputStruct_sen_norm_set)
    __swig_setmethods__["filt_maxLevels"] = _zefr.InputStruct_filt_maxLevels_set
    __swig_getmethods__["filt_maxLevels"] = _zefr.InputStruct_filt_maxLevels_get
    if _newclass:filt_maxLevels = _swig_property(_zefr.InputStruct_filt_maxLevels_get, _zefr.InputStruct_filt_maxLevels_set)
    __swig_setmethods__["shockcapture"] = _zefr.InputStruct_shockcapture_set
    __swig_getmethods__["shockcapture"] = _zefr.InputStruct_shockcapture_get
    if _newclass:shockcapture = _swig_property(_zefr.InputStruct_shockcapture_get, _zefr.InputStruct_shockcapture_set)
    __swig_setmethods__["limiter"] = _zefr.InputStruct_limiter_set
    __swig_getmethods__["limiter"] = _zefr.InputStruct_limiter_get
    if _newclass:limiter = _swig_property(_zefr.InputStruct_limiter_get, _zefr.InputStruct_limiter_set)
    __swig_setmethods__["filt2on"] = _zefr.InputStruct_filt2on_set
    __swig_getmethods__["filt2on"] = _zefr.InputStruct_filt2on_get
    if _newclass:filt2on = _swig_property(_zefr.InputStruct_filt2on_get, _zefr.InputStruct_filt2on_set)
    __swig_setmethods__["sen_Jfac"] = _zefr.InputStruct_sen_Jfac_set
    __swig_getmethods__["sen_Jfac"] = _zefr.InputStruct_sen_Jfac_get
    if _newclass:sen_Jfac = _swig_property(_zefr.InputStruct_sen_Jfac_get, _zefr.InputStruct_sen_Jfac_set)
    __swig_setmethods__["filt_gamma"] = _zefr.InputStruct_filt_gamma_set
    __swig_getmethods__["filt_gamma"] = _zefr.InputStruct_filt_gamma_get
    if _newclass:filt_gamma = _swig_property(_zefr.InputStruct_filt_gamma_get, _zefr.InputStruct_filt_gamma_set)
    __swig_setmethods__["alpha"] = _zefr.InputStruct_alpha_set
    __swig_getmethods__["alpha"] = _zefr.InputStruct_alpha_get
    if _newclass:alpha = _swig_property(_zefr.InputStruct_alpha_get, _zefr.InputStruct_alpha_set)
    __swig_setmethods__["filtexp"] = _zefr.InputStruct_filtexp_set
    __swig_getmethods__["filtexp"] = _zefr.InputStruct_filtexp_get
    if _newclass:filtexp = _swig_property(_zefr.InputStruct_filtexp_get, _zefr.InputStruct_filtexp_set)
    __swig_setmethods__["nonlin_exp"] = _zefr.InputStruct_nonlin_exp_set
    __swig_getmethods__["nonlin_exp"] = _zefr.InputStruct_nonlin_exp_get
    if _newclass:nonlin_exp = _swig_property(_zefr.InputStruct_nonlin_exp_get, _zefr.InputStruct_nonlin_exp_set)
    __swig_setmethods__["filtexp2"] = _zefr.InputStruct_filtexp2_set
    __swig_getmethods__["filtexp2"] = _zefr.InputStruct_filtexp2_get
    if _newclass:filtexp2 = _swig_property(_zefr.InputStruct_filtexp2_get, _zefr.InputStruct_filtexp2_set)
    __swig_setmethods__["alpha2"] = _zefr.InputStruct_alpha2_set
    __swig_getmethods__["alpha2"] = _zefr.InputStruct_alpha2_get
    if _newclass:alpha2 = _swig_property(_zefr.InputStruct_alpha2_get, _zefr.InputStruct_alpha2_set)
    __swig_setmethods__["iter"] = _zefr.InputStruct_iter_set
    __swig_getmethods__["iter"] = _zefr.InputStruct_iter_get
    if _newclass:iter = _swig_property(_zefr.InputStruct_iter_get, _zefr.InputStruct_iter_set)
    __swig_setmethods__["initIter"] = _zefr.InputStruct_initIter_set
    __swig_getmethods__["initIter"] = _zefr.InputStruct_initIter_get
    if _newclass:initIter = _swig_property(_zefr.InputStruct_initIter_get, _zefr.InputStruct_initIter_set)
    __swig_setmethods__["time"] = _zefr.InputStruct_time_set
    __swig_getmethods__["time"] = _zefr.InputStruct_time_get
    if _newclass:time = _swig_property(_zefr.InputStruct_time_get, _zefr.InputStruct_time_set)
    __swig_setmethods__["tfinal"] = _zefr.InputStruct_tfinal_set
    __swig_getmethods__["tfinal"] = _zefr.InputStruct_tfinal_get
    if _newclass:tfinal = _swig_property(_zefr.InputStruct_tfinal_get, _zefr.InputStruct_tfinal_set)
    __swig_setmethods__["nStages"] = _zefr.InputStruct_nStages_set
    __swig_getmethods__["nStages"] = _zefr.InputStruct_nStages_get
    if _newclass:nStages = _swig_property(_zefr.InputStruct_nStages_get, _zefr.InputStruct_nStages_set)
    __swig_setmethods__["pi_alpha"] = _zefr.InputStruct_pi_alpha_set
    __swig_getmethods__["pi_alpha"] = _zefr.InputStruct_pi_alpha_get
    if _newclass:pi_alpha = _swig_property(_zefr.InputStruct_pi_alpha_get, _zefr.InputStruct_pi_alpha_set)
    __swig_setmethods__["pi_beta"] = _zefr.InputStruct_pi_beta_set
    __swig_getmethods__["pi_beta"] = _zefr.InputStruct_pi_beta_get
    if _newclass:pi_beta = _swig_property(_zefr.InputStruct_pi_beta_get, _zefr.InputStruct_pi_beta_set)
    __swig_setmethods__["sfact"] = _zefr.InputStruct_sfact_set
    __swig_getmethods__["sfact"] = _zefr.InputStruct_sfact_get
    if _newclass:sfact = _swig_property(_zefr.InputStruct_sfact_get, _zefr.InputStruct_sfact_set)
    __swig_setmethods__["maxfac"] = _zefr.InputStruct_maxfac_set
    __swig_getmethods__["maxfac"] = _zefr.InputStruct_maxfac_get
    if _newclass:maxfac = _swig_property(_zefr.InputStruct_maxfac_get, _zefr.InputStruct_maxfac_set)
    __swig_setmethods__["minfac"] = _zefr.InputStruct_minfac_set
    __swig_getmethods__["minfac"] = _zefr.InputStruct_minfac_get
    if _newclass:minfac = _swig_property(_zefr.InputStruct_minfac_get, _zefr.InputStruct_minfac_set)
    __swig_setmethods__["max_dt"] = _zefr.InputStruct_max_dt_set
    __swig_getmethods__["max_dt"] = _zefr.InputStruct_max_dt_get
    if _newclass:max_dt = _swig_property(_zefr.InputStruct_max_dt_get, _zefr.InputStruct_max_dt_set)
    __swig_setmethods__["atol"] = _zefr.InputStruct_atol_set
    __swig_getmethods__["atol"] = _zefr.InputStruct_atol_get
    if _newclass:atol = _swig_property(_zefr.InputStruct_atol_get, _zefr.InputStruct_atol_set)
    __swig_setmethods__["rtol"] = _zefr.InputStruct_rtol_set
    __swig_getmethods__["rtol"] = _zefr.InputStruct_rtol_get
    if _newclass:rtol = _swig_property(_zefr.InputStruct_rtol_get, _zefr.InputStruct_rtol_set)
    __swig_setmethods__["write_paraview"] = _zefr.InputStruct_write_paraview_set
    __swig_getmethods__["write_paraview"] = _zefr.InputStruct_write_paraview_get
    if _newclass:write_paraview = _swig_property(_zefr.InputStruct_write_paraview_get, _zefr.InputStruct_write_paraview_set)
    __swig_setmethods__["write_pyfr"] = _zefr.InputStruct_write_pyfr_set
    __swig_getmethods__["write_pyfr"] = _zefr.InputStruct_write_pyfr_get
    if _newclass:write_pyfr = _swig_property(_zefr.InputStruct_write_pyfr_get, _zefr.InputStruct_write_pyfr_set)
    __swig_setmethods__["plot_surfaces"] = _zefr.InputStruct_plot_surfaces_set
    __swig_getmethods__["plot_surfaces"] = _zefr.InputStruct_plot_surfaces_get
    if _newclass:plot_surfaces = _swig_property(_zefr.InputStruct_plot_surfaces_get, _zefr.InputStruct_plot_surfaces_set)
    __swig_setmethods__["plot_overset"] = _zefr.InputStruct_plot_overset_set
    __swig_getmethods__["plot_overset"] = _zefr.InputStruct_plot_overset_get
    if _newclass:plot_overset = _swig_property(_zefr.InputStruct_plot_overset_get, _zefr.InputStruct_plot_overset_set)
    __swig_setmethods__["restart_iter"] = _zefr.InputStruct_restart_iter_set
    __swig_getmethods__["restart_iter"] = _zefr.InputStruct_restart_iter_get
    if _newclass:restart_iter = _swig_property(_zefr.InputStruct_restart_iter_get, _zefr.InputStruct_restart_iter_set)
    __swig_setmethods__["restart_type"] = _zefr.InputStruct_restart_type_set
    __swig_getmethods__["restart_type"] = _zefr.InputStruct_restart_type_get
    if _newclass:restart_type = _swig_property(_zefr.InputStruct_restart_type_get, _zefr.InputStruct_restart_type_set)
    __swig_setmethods__["restart_case"] = _zefr.InputStruct_restart_case_set
    __swig_getmethods__["restart_case"] = _zefr.InputStruct_restart_case_get
    if _newclass:restart_case = _swig_property(_zefr.InputStruct_restart_case_get, _zefr.InputStruct_restart_case_set)
    __swig_setmethods__["catch_signals"] = _zefr.InputStruct_catch_signals_set
    __swig_getmethods__["catch_signals"] = _zefr.InputStruct_catch_signals_get
    if _newclass:catch_signals = _swig_property(_zefr.InputStruct_catch_signals_get, _zefr.InputStruct_catch_signals_set)
    __swig_setmethods__["write_LHS"] = _zefr.InputStruct_write_LHS_set
    __swig_getmethods__["write_LHS"] = _zefr.InputStruct_write_LHS_get
    if _newclass:write_LHS = _swig_property(_zefr.InputStruct_write_LHS_get, _zefr.InputStruct_write_LHS_set)
    __swig_setmethods__["write_RHS"] = _zefr.InputStruct_write_RHS_set
    __swig_getmethods__["write_RHS"] = _zefr.InputStruct_write_RHS_get
    if _newclass:write_RHS = _swig_property(_zefr.InputStruct_write_RHS_get, _zefr.InputStruct_write_RHS_set)
    __swig_setmethods__["tavg"] = _zefr.InputStruct_tavg_set
    __swig_getmethods__["tavg"] = _zefr.InputStruct_tavg_get
    if _newclass:tavg = _swig_property(_zefr.InputStruct_tavg_get, _zefr.InputStruct_tavg_set)
    __swig_setmethods__["tavg_freq"] = _zefr.InputStruct_tavg_freq_set
    __swig_getmethods__["tavg_freq"] = _zefr.InputStruct_tavg_freq_get
    if _newclass:tavg_freq = _swig_property(_zefr.InputStruct_tavg_freq_get, _zefr.InputStruct_tavg_freq_set)
    __swig_setmethods__["write_tavg_freq"] = _zefr.InputStruct_write_tavg_freq_set
    __swig_getmethods__["write_tavg_freq"] = _zefr.InputStruct_write_tavg_freq_get
    if _newclass:write_tavg_freq = _swig_property(_zefr.InputStruct_write_tavg_freq_get, _zefr.InputStruct_write_tavg_freq_set)
    __swig_setmethods__["motion"] = _zefr.InputStruct_motion_set
    __swig_getmethods__["motion"] = _zefr.InputStruct_motion_get
    if _newclass:motion = _swig_property(_zefr.InputStruct_motion_get, _zefr.InputStruct_motion_set)
    __swig_setmethods__["overset"] = _zefr.InputStruct_overset_set
    __swig_getmethods__["overset"] = _zefr.InputStruct_overset_get
    if _newclass:overset = _swig_property(_zefr.InputStruct_overset_get, _zefr.InputStruct_overset_set)
    __swig_setmethods__["use_lgp"] = _zefr.InputStruct_use_lgp_set
    __swig_getmethods__["use_lgp"] = _zefr.InputStruct_use_lgp_get
    if _newclass:use_lgp = _swig_property(_zefr.InputStruct_use_lgp_get, _zefr.InputStruct_use_lgp_set)
    __swig_setmethods__["full_6dof"] = _zefr.InputStruct_full_6dof_set
    __swig_getmethods__["full_6dof"] = _zefr.InputStruct_full_6dof_get
    if _newclass:full_6dof = _swig_property(_zefr.InputStruct_full_6dof_get, _zefr.InputStruct_full_6dof_set)
    __swig_setmethods__["gridID"] = _zefr.InputStruct_gridID_set
    __swig_getmethods__["gridID"] = _zefr.InputStruct_gridID_get
    if _newclass:gridID = _swig_property(_zefr.InputStruct_gridID_get, _zefr.InputStruct_gridID_set)
    __swig_setmethods__["nGrids"] = _zefr.InputStruct_nGrids_set
    __swig_getmethods__["nGrids"] = _zefr.InputStruct_nGrids_get
    if _newclass:nGrids = _swig_property(_zefr.InputStruct_nGrids_get, _zefr.InputStruct_nGrids_set)
    __swig_setmethods__["gridType"] = _zefr.InputStruct_gridType_set
    __swig_getmethods__["gridType"] = _zefr.InputStruct_gridType_get
    if _newclass:gridType = _swig_property(_zefr.InputStruct_gridType_get, _zefr.InputStruct_gridType_set)
    __swig_setmethods__["motion_type"] = _zefr.InputStruct_motion_type_set
    __swig_getmethods__["motion_type"] = _zefr.InputStruct_motion_type_get
    if _newclass:motion_type = _swig_property(_zefr.InputStruct_motion_type_get, _zefr.InputStruct_motion_type_set)
    __swig_setmethods__["oversetGrids"] = _zefr.InputStruct_oversetGrids_set
    __swig_getmethods__["oversetGrids"] = _zefr.InputStruct_oversetGrids_get
    if _newclass:oversetGrids = _swig_property(_zefr.InputStruct_oversetGrids_get, _zefr.InputStruct_oversetGrids_set)
    __swig_setmethods__["gridTypes"] = _zefr.InputStruct_gridTypes_set
    __swig_getmethods__["gridTypes"] = _zefr.InputStruct_gridTypes_get
    if _newclass:gridTypes = _swig_property(_zefr.InputStruct_gridTypes_get, _zefr.InputStruct_gridTypes_set)
    __swig_setmethods__["moveAx"] = _zefr.InputStruct_moveAx_set
    __swig_getmethods__["moveAx"] = _zefr.InputStruct_moveAx_get
    if _newclass:moveAx = _swig_property(_zefr.InputStruct_moveAx_get, _zefr.InputStruct_moveAx_set)
    __swig_setmethods__["moveAy"] = _zefr.InputStruct_moveAy_set
    __swig_getmethods__["moveAy"] = _zefr.InputStruct_moveAy_get
    if _newclass:moveAy = _swig_property(_zefr.InputStruct_moveAy_get, _zefr.InputStruct_moveAy_set)
    __swig_setmethods__["moveAz"] = _zefr.InputStruct_moveAz_set
    __swig_getmethods__["moveAz"] = _zefr.InputStruct_moveAz_get
    if _newclass:moveAz = _swig_property(_zefr.InputStruct_moveAz_get, _zefr.InputStruct_moveAz_set)
    __swig_setmethods__["moveFx"] = _zefr.InputStruct_moveFx_set
    __swig_getmethods__["moveFx"] = _zefr.InputStruct_moveFx_get
    if _newclass:moveFx = _swig_property(_zefr.InputStruct_moveFx_get, _zefr.InputStruct_moveFx_set)
    __swig_setmethods__["moveFy"] = _zefr.InputStruct_moveFy_set
    __swig_getmethods__["moveFy"] = _zefr.InputStruct_moveFy_get
    if _newclass:moveFy = _swig_property(_zefr.InputStruct_moveFy_get, _zefr.InputStruct_moveFy_set)
    __swig_setmethods__["moveFz"] = _zefr.InputStruct_moveFz_set
    __swig_getmethods__["moveFz"] = _zefr.InputStruct_moveFz_get
    if _newclass:moveFz = _swig_property(_zefr.InputStruct_moveFz_get, _zefr.InputStruct_moveFz_set)
    __swig_setmethods__["rot_axis"] = _zefr.InputStruct_rot_axis_set
    __swig_getmethods__["rot_axis"] = _zefr.InputStruct_rot_axis_get
    if _newclass:rot_axis = _swig_property(_zefr.InputStruct_rot_axis_get, _zefr.InputStruct_rot_axis_set)
    __swig_setmethods__["rot_angle"] = _zefr.InputStruct_rot_angle_set
    __swig_getmethods__["rot_angle"] = _zefr.InputStruct_rot_angle_get
    if _newclass:rot_angle = _swig_property(_zefr.InputStruct_rot_angle_get, _zefr.InputStruct_rot_angle_set)
    __swig_setmethods__["xc"] = _zefr.InputStruct_xc_set
    __swig_getmethods__["xc"] = _zefr.InputStruct_xc_get
    if _newclass:xc = _swig_property(_zefr.InputStruct_xc_get, _zefr.InputStruct_xc_set)
    __swig_setmethods__["dxc"] = _zefr.InputStruct_dxc_set
    __swig_getmethods__["dxc"] = _zefr.InputStruct_dxc_get
    if _newclass:dxc = _swig_property(_zefr.InputStruct_dxc_get, _zefr.InputStruct_dxc_set)
    __swig_setmethods__["vc"] = _zefr.InputStruct_vc_set
    __swig_getmethods__["vc"] = _zefr.InputStruct_vc_get
    if _newclass:vc = _swig_property(_zefr.InputStruct_vc_get, _zefr.InputStruct_vc_set)
    __swig_setmethods__["dvc"] = _zefr.InputStruct_dvc_set
    __swig_getmethods__["dvc"] = _zefr.InputStruct_dvc_get
    if _newclass:dvc = _swig_property(_zefr.InputStruct_dvc_get, _zefr.InputStruct_dvc_set)
    __swig_setmethods__["g"] = _zefr.InputStruct_g_set
    __swig_getmethods__["g"] = _zefr.InputStruct_g_get
    if _newclass:g = _swig_property(_zefr.InputStruct_g_get, _zefr.InputStruct_g_set)
    __swig_setmethods__["v0"] = _zefr.InputStruct_v0_set
    __swig_getmethods__["v0"] = _zefr.InputStruct_v0_get
    if _newclass:v0 = _swig_property(_zefr.InputStruct_v0_get, _zefr.InputStruct_v0_set)
    __swig_setmethods__["w0"] = _zefr.InputStruct_w0_set
    __swig_getmethods__["w0"] = _zefr.InputStruct_w0_get
    if _newclass:w0 = _swig_property(_zefr.InputStruct_w0_get, _zefr.InputStruct_w0_set)
    __swig_setmethods__["mass"] = _zefr.InputStruct_mass_set
    __swig_getmethods__["mass"] = _zefr.InputStruct_mass_get
    if _newclass:mass = _swig_property(_zefr.InputStruct_mass_get, _zefr.InputStruct_mass_set)
    __swig_setmethods__["Imat"] = _zefr.InputStruct_Imat_set
    __swig_getmethods__["Imat"] = _zefr.InputStruct_Imat_get
    if _newclass:Imat = _swig_property(_zefr.InputStruct_Imat_get, _zefr.InputStruct_Imat_set)
    __swig_setmethods__["meshBounds"] = _zefr.InputStruct_meshBounds_set
    __swig_getmethods__["meshBounds"] = _zefr.InputStruct_meshBounds_get
    if _newclass:meshBounds = _swig_property(_zefr.InputStruct_meshBounds_get, _zefr.InputStruct_meshBounds_set)
    __swig_setmethods__["implicit_method"] = _zefr.InputStruct_implicit_method_set
    __swig_getmethods__["implicit_method"] = _zefr.InputStruct_implicit_method_get
    if _newclass:implicit_method = _swig_property(_zefr.InputStruct_implicit_method_get, _zefr.InputStruct_implicit_method_set)
    __swig_setmethods__["implicit_steady"] = _zefr.InputStruct_implicit_steady_set
    __swig_getmethods__["implicit_steady"] = _zefr.InputStruct_implicit_steady_get
    if _newclass:implicit_steady = _swig_property(_zefr.InputStruct_implicit_steady_get, _zefr.InputStruct_implicit_steady_set)
    __swig_setmethods__["pseudo_time"] = _zefr.InputStruct_pseudo_time_set
    __swig_getmethods__["pseudo_time"] = _zefr.InputStruct_pseudo_time_get
    if _newclass:pseudo_time = _swig_property(_zefr.InputStruct_pseudo_time_get, _zefr.InputStruct_pseudo_time_set)
    __swig_setmethods__["adapt_dtau"] = _zefr.InputStruct_adapt_dtau_set
    __swig_getmethods__["adapt_dtau"] = _zefr.InputStruct_adapt_dtau_get
    if _newclass:adapt_dtau = _swig_property(_zefr.InputStruct_adapt_dtau_get, _zefr.InputStruct_adapt_dtau_set)
    __swig_setmethods__["FDA_Jacobian"] = _zefr.InputStruct_FDA_Jacobian_set
    __swig_getmethods__["FDA_Jacobian"] = _zefr.InputStruct_FDA_Jacobian_get
    if _newclass:FDA_Jacobian = _swig_property(_zefr.InputStruct_FDA_Jacobian_get, _zefr.InputStruct_FDA_Jacobian_set)
    __swig_setmethods__["KPF_Jacobian"] = _zefr.InputStruct_KPF_Jacobian_set
    __swig_getmethods__["KPF_Jacobian"] = _zefr.InputStruct_KPF_Jacobian_get
    if _newclass:KPF_Jacobian = _swig_property(_zefr.InputStruct_KPF_Jacobian_get, _zefr.InputStruct_KPF_Jacobian_set)
    __swig_setmethods__["freeze_Jacobian"] = _zefr.InputStruct_freeze_Jacobian_set
    __swig_getmethods__["freeze_Jacobian"] = _zefr.InputStruct_freeze_Jacobian_get
    if _newclass:freeze_Jacobian = _swig_property(_zefr.InputStruct_freeze_Jacobian_get, _zefr.InputStruct_freeze_Jacobian_set)
    __swig_setmethods__["remove_deltaU"] = _zefr.InputStruct_remove_deltaU_set
    __swig_getmethods__["remove_deltaU"] = _zefr.InputStruct_remove_deltaU_get
    if _newclass:remove_deltaU = _swig_property(_zefr.InputStruct_remove_deltaU_get, _zefr.InputStruct_remove_deltaU_set)
    __swig_setmethods__["dtau"] = _zefr.InputStruct_dtau_set
    __swig_getmethods__["dtau"] = _zefr.InputStruct_dtau_get
    if _newclass:dtau = _swig_property(_zefr.InputStruct_dtau_get, _zefr.InputStruct_dtau_set)
    __swig_setmethods__["CFL_tau"] = _zefr.InputStruct_CFL_tau_set
    __swig_getmethods__["CFL_tau"] = _zefr.InputStruct_CFL_tau_get
    if _newclass:CFL_tau = _swig_property(_zefr.InputStruct_CFL_tau_get, _zefr.InputStruct_CFL_tau_set)
    __swig_setmethods__["dtau_ratio_max"] = _zefr.InputStruct_dtau_ratio_max_set
    __swig_getmethods__["dtau_ratio_max"] = _zefr.InputStruct_dtau_ratio_max_get
    if _newclass:dtau_ratio_max = _swig_property(_zefr.InputStruct_dtau_ratio_max_get, _zefr.InputStruct_dtau_ratio_max_set)
    __swig_setmethods__["dtau_growth_rate"] = _zefr.InputStruct_dtau_growth_rate_set
    __swig_getmethods__["dtau_growth_rate"] = _zefr.InputStruct_dtau_growth_rate_get
    if _newclass:dtau_growth_rate = _swig_property(_zefr.InputStruct_dtau_growth_rate_get, _zefr.InputStruct_dtau_growth_rate_set)
    __swig_setmethods__["dtau_type"] = _zefr.InputStruct_dtau_type_set
    __swig_getmethods__["dtau_type"] = _zefr.InputStruct_dtau_type_get
    if _newclass:dtau_type = _swig_property(_zefr.InputStruct_dtau_type_get, _zefr.InputStruct_dtau_type_set)
    __swig_setmethods__["CFL_tau_type"] = _zefr.InputStruct_CFL_tau_type_set
    __swig_getmethods__["CFL_tau_type"] = _zefr.InputStruct_CFL_tau_type_get
    if _newclass:CFL_tau_type = _swig_property(_zefr.InputStruct_CFL_tau_type_get, _zefr.InputStruct_CFL_tau_type_set)
    __swig_setmethods__["iterative_method"] = _zefr.InputStruct_iterative_method_set
    __swig_getmethods__["iterative_method"] = _zefr.InputStruct_iterative_method_get
    if _newclass:iterative_method = _swig_property(_zefr.InputStruct_iterative_method_get, _zefr.InputStruct_iterative_method_set)
    __swig_setmethods__["linear_solver"] = _zefr.InputStruct_linear_solver_set
    __swig_getmethods__["linear_solver"] = _zefr.InputStruct_linear_solver_get
    if _newclass:linear_solver = _swig_property(_zefr.InputStruct_linear_solver_get, _zefr.InputStruct_linear_solver_set)
    __swig_setmethods__["nColors"] = _zefr.InputStruct_nColors_set
    __swig_getmethods__["nColors"] = _zefr.InputStruct_nColors_get
    if _newclass:nColors = _swig_property(_zefr.InputStruct_nColors_get, _zefr.InputStruct_nColors_set)
    __swig_setmethods__["iterNM_max"] = _zefr.InputStruct_iterNM_max_set
    __swig_getmethods__["iterNM_max"] = _zefr.InputStruct_iterNM_max_get
    if _newclass:iterNM_max = _swig_property(_zefr.InputStruct_iterNM_max_get, _zefr.InputStruct_iterNM_max_set)
    __swig_setmethods__["report_NMconv_freq"] = _zefr.InputStruct_report_NMconv_freq_set
    __swig_getmethods__["report_NMconv_freq"] = _zefr.InputStruct_report_NMconv_freq_get
    if _newclass:report_NMconv_freq = _swig_property(_zefr.InputStruct_report_NMconv_freq_get, _zefr.InputStruct_report_NMconv_freq_set)
    __swig_setmethods__["iterBM_max"] = _zefr.InputStruct_iterBM_max_set
    __swig_getmethods__["iterBM_max"] = _zefr.InputStruct_iterBM_max_get
    if _newclass:iterBM_max = _swig_property(_zefr.InputStruct_iterBM_max_get, _zefr.InputStruct_iterBM_max_set)
    __swig_setmethods__["report_BMconv_freq"] = _zefr.InputStruct_report_BMconv_freq_set
    __swig_getmethods__["report_BMconv_freq"] = _zefr.InputStruct_report_BMconv_freq_get
    if _newclass:report_BMconv_freq = _swig_property(_zefr.InputStruct_report_BMconv_freq_get, _zefr.InputStruct_report_BMconv_freq_set)
    __swig_setmethods__["backsweep"] = _zefr.InputStruct_backsweep_set
    __swig_getmethods__["backsweep"] = _zefr.InputStruct_backsweep_get
    if _newclass:backsweep = _swig_property(_zefr.InputStruct_backsweep_get, _zefr.InputStruct_backsweep_set)
    __swig_setmethods__["svd_omg"] = _zefr.InputStruct_svd_omg_set
    __swig_getmethods__["svd_omg"] = _zefr.InputStruct_svd_omg_get
    if _newclass:svd_omg = _swig_property(_zefr.InputStruct_svd_omg_get, _zefr.InputStruct_svd_omg_set)
    __swig_setmethods__["svd_cutoff"] = _zefr.InputStruct_svd_cutoff_set
    __swig_getmethods__["svd_cutoff"] = _zefr.InputStruct_svd_cutoff_get
    if _newclass:svd_cutoff = _swig_property(_zefr.InputStruct_svd_cutoff_get, _zefr.InputStruct_svd_cutoff_set)
    __swig_setmethods__["waitTimer"] = _zefr.InputStruct_waitTimer_set
    __swig_getmethods__["waitTimer"] = _zefr.InputStruct_waitTimer_get
    if _newclass:waitTimer = _swig_property(_zefr.InputStruct_waitTimer_get, _zefr.InputStruct_waitTimer_set)
    def __init__(self): 
        this = _zefr.new_InputStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _zefr.delete_InputStruct
    __del__ = lambda self : None;
InputStruct_swigregister = _zefr.InputStruct_swigregister
InputStruct_swigregister(InputStruct)

class Zefr(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Zefr, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Zefr, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _zefr.new_Zefr(*args)
        try: self.this.append(this)
        except: self.this = this
    def read_input(self, *args): return _zefr.Zefr_read_input(self, *args)
    def init_inputs(self): return _zefr.Zefr_init_inputs(self)
    def setup_solver(self): return _zefr.Zefr_setup_solver(self)
    def restart_solution(self): return _zefr.Zefr_restart_solution(self)
    def do_step(self): return _zefr.Zefr_do_step(self)
    def do_n_steps(self, *args): return _zefr.Zefr_do_n_steps(self, *args)
    def do_rk_stage(self, *args): return _zefr.Zefr_do_rk_stage(self, *args)
    def do_rk_stage_start(self, *args): return _zefr.Zefr_do_rk_stage_start(self, *args)
    def do_rk_stage_mid(self, *args): return _zefr.Zefr_do_rk_stage_mid(self, *args)
    def do_rk_stage_finish(self, *args): return _zefr.Zefr_do_rk_stage_finish(self, *args)
    def write_residual(self): return _zefr.Zefr_write_residual(self)
    def write_solution(self): return _zefr.Zefr_write_solution(self)
    def write_forces(self): return _zefr.Zefr_write_forces(self)
    def write_error(self): return _zefr.Zefr_write_error(self)
    def update_averages(self): return _zefr.Zefr_update_averages(self)
    def write_averages(self): return _zefr.Zefr_write_averages(self)
    def write_wall_time(self): return _zefr.Zefr_write_wall_time(self)
    def get_input(self): return _zefr.Zefr_get_input(self)
    def get_data(self): return _zefr.Zefr_get_data(self)
    def get_forces(self): return _zefr.Zefr_get_forces(self)
    def get_basic_geo_data(self, *args): return _zefr.Zefr_get_basic_geo_data(self, *args)
    def get_extra_geo_data(self, *args): return _zefr.Zefr_get_extra_geo_data(self, *args)
    def get_gpu_geo_data(self, *args): return _zefr.Zefr_get_gpu_geo_data(self, *args)
    def get_u_spt(self, *args): return _zefr.Zefr_get_u_spt(self, *args)
    def get_grad_spt(self, *args): return _zefr.Zefr_get_grad_spt(self, *args)
    def get_u_spts(self, *args): return _zefr.Zefr_get_u_spts(self, *args)
    def get_du_spts(self, *args): return _zefr.Zefr_get_du_spts(self, *args)
    def get_u_spts_d(self, *args): return _zefr.Zefr_get_u_spts_d(self, *args)
    def get_du_spts_d(self, *args): return _zefr.Zefr_get_du_spts_d(self, *args)
    def get_nodes_per_cell(self, *args): return _zefr.Zefr_get_nodes_per_cell(self, *args)
    def get_nodes_per_face(self, *args): return _zefr.Zefr_get_nodes_per_face(self, *args)
    def get_receptor_nodes(self, *args): return _zefr.Zefr_get_receptor_nodes(self, *args)
    def get_face_nodes(self, *args): return _zefr.Zefr_get_face_nodes(self, *args)
    def donor_inclusion_test(self, *args): return _zefr.Zefr_donor_inclusion_test(self, *args)
    def donor_frac(self, *args): return _zefr.Zefr_donor_frac(self, *args)
    def get_u_fpt(self, *args): return _zefr.Zefr_get_u_fpt(self, *args)
    def get_grad_fpt(self, *args): return _zefr.Zefr_get_grad_fpt(self, *args)
    def update_iblank_gpu(self): return _zefr.Zefr_update_iblank_gpu(self)
    def donor_data_from_device(self, *args): return _zefr.Zefr_donor_data_from_device(self, *args)
    def fringe_data_to_device(self, *args): return _zefr.Zefr_fringe_data_to_device(self, *args)
    def unblank_data_to_device(self, *args): return _zefr.Zefr_unblank_data_to_device(self, *args)
    def get_face_nodes_gpu(self, *args): return _zefr.Zefr_get_face_nodes_gpu(self, *args)
    def get_cell_nodes_gpu(self, *args): return _zefr.Zefr_get_cell_nodes_gpu(self, *args)
    def get_n_weights(self, *args): return _zefr.Zefr_get_n_weights(self, *args)
    def donor_frac_gpu(self, *args): return _zefr.Zefr_donor_frac_gpu(self, *args)
    def set_dataUpdate_callback(self, *args): return _zefr.Zefr_set_dataUpdate_callback(self, *args)
    def set_tioga_callbacks(self, *args): return _zefr.Zefr_set_tioga_callbacks(self, *args)
    def set_rigid_body_callbacks(self, *args): return _zefr.Zefr_set_rigid_body_callbacks(self, *args)
    def move_grid_next(self, *args): return _zefr.Zefr_move_grid_next(self, *args)
    def move_grid(self, *args): return _zefr.Zefr_move_grid(self, *args)
    def get_tg_stream_handle(self): return _zefr.Zefr_get_tg_stream_handle(self)
    def get_tg_event_handle(self): return _zefr.Zefr_get_tg_event_handle(self)
    __swig_destroy__ = _zefr.delete_Zefr
    __del__ = lambda self : None;
Zefr_swigregister = _zefr.Zefr_swigregister
Zefr_swigregister(Zefr)

class BasicGeo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BasicGeo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BasicGeo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["btag"] = _zefr.BasicGeo_btag_set
    __swig_getmethods__["btag"] = _zefr.BasicGeo_btag_get
    if _newclass:btag = _swig_property(_zefr.BasicGeo_btag_get, _zefr.BasicGeo_btag_set)
    __swig_setmethods__["gridType"] = _zefr.BasicGeo_gridType_set
    __swig_getmethods__["gridType"] = _zefr.BasicGeo_gridType_get
    if _newclass:gridType = _swig_property(_zefr.BasicGeo_gridType_get, _zefr.BasicGeo_gridType_set)
    __swig_setmethods__["nnodes"] = _zefr.BasicGeo_nnodes_set
    __swig_getmethods__["nnodes"] = _zefr.BasicGeo_nnodes_get
    if _newclass:nnodes = _swig_property(_zefr.BasicGeo_nnodes_get, _zefr.BasicGeo_nnodes_set)
    __swig_setmethods__["xyz"] = _zefr.BasicGeo_xyz_set
    __swig_getmethods__["xyz"] = _zefr.BasicGeo_xyz_get
    if _newclass:xyz = _swig_property(_zefr.BasicGeo_xyz_get, _zefr.BasicGeo_xyz_set)
    __swig_setmethods__["iblank"] = _zefr.BasicGeo_iblank_set
    __swig_getmethods__["iblank"] = _zefr.BasicGeo_iblank_get
    if _newclass:iblank = _swig_property(_zefr.BasicGeo_iblank_get, _zefr.BasicGeo_iblank_set)
    __swig_setmethods__["nwall"] = _zefr.BasicGeo_nwall_set
    __swig_getmethods__["nwall"] = _zefr.BasicGeo_nwall_get
    if _newclass:nwall = _swig_property(_zefr.BasicGeo_nwall_get, _zefr.BasicGeo_nwall_set)
    __swig_setmethods__["nover"] = _zefr.BasicGeo_nover_set
    __swig_getmethods__["nover"] = _zefr.BasicGeo_nover_get
    if _newclass:nover = _swig_property(_zefr.BasicGeo_nover_get, _zefr.BasicGeo_nover_set)
    __swig_setmethods__["wallNodes"] = _zefr.BasicGeo_wallNodes_set
    __swig_getmethods__["wallNodes"] = _zefr.BasicGeo_wallNodes_get
    if _newclass:wallNodes = _swig_property(_zefr.BasicGeo_wallNodes_get, _zefr.BasicGeo_wallNodes_set)
    __swig_setmethods__["overNodes"] = _zefr.BasicGeo_overNodes_set
    __swig_getmethods__["overNodes"] = _zefr.BasicGeo_overNodes_get
    if _newclass:overNodes = _swig_property(_zefr.BasicGeo_overNodes_get, _zefr.BasicGeo_overNodes_set)
    __swig_setmethods__["nCellTypes"] = _zefr.BasicGeo_nCellTypes_set
    __swig_getmethods__["nCellTypes"] = _zefr.BasicGeo_nCellTypes_get
    if _newclass:nCellTypes = _swig_property(_zefr.BasicGeo_nCellTypes_get, _zefr.BasicGeo_nCellTypes_set)
    __swig_setmethods__["nvert_cell"] = _zefr.BasicGeo_nvert_cell_set
    __swig_getmethods__["nvert_cell"] = _zefr.BasicGeo_nvert_cell_get
    if _newclass:nvert_cell = _swig_property(_zefr.BasicGeo_nvert_cell_get, _zefr.BasicGeo_nvert_cell_set)
    __swig_setmethods__["nCells_type"] = _zefr.BasicGeo_nCells_type_set
    __swig_getmethods__["nCells_type"] = _zefr.BasicGeo_nCells_type_get
    if _newclass:nCells_type = _swig_property(_zefr.BasicGeo_nCells_type_get, _zefr.BasicGeo_nCells_type_set)
    __swig_setmethods__["c2v"] = _zefr.BasicGeo_c2v_set
    __swig_getmethods__["c2v"] = _zefr.BasicGeo_c2v_get
    if _newclass:c2v = _swig_property(_zefr.BasicGeo_c2v_get, _zefr.BasicGeo_c2v_set)
    def __init__(self): 
        this = _zefr.new_BasicGeo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _zefr.delete_BasicGeo
    __del__ = lambda self : None;
BasicGeo_swigregister = _zefr.BasicGeo_swigregister
BasicGeo_swigregister(BasicGeo)

class ExtraGeo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ExtraGeo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ExtraGeo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nFaceTypes"] = _zefr.ExtraGeo_nFaceTypes_set
    __swig_getmethods__["nFaceTypes"] = _zefr.ExtraGeo_nFaceTypes_get
    if _newclass:nFaceTypes = _swig_property(_zefr.ExtraGeo_nFaceTypes_get, _zefr.ExtraGeo_nFaceTypes_set)
    __swig_setmethods__["nvert_face"] = _zefr.ExtraGeo_nvert_face_set
    __swig_getmethods__["nvert_face"] = _zefr.ExtraGeo_nvert_face_get
    if _newclass:nvert_face = _swig_property(_zefr.ExtraGeo_nvert_face_get, _zefr.ExtraGeo_nvert_face_set)
    __swig_setmethods__["nFaces_type"] = _zefr.ExtraGeo_nFaces_type_set
    __swig_getmethods__["nFaces_type"] = _zefr.ExtraGeo_nFaces_type_get
    if _newclass:nFaces_type = _swig_property(_zefr.ExtraGeo_nFaces_type_get, _zefr.ExtraGeo_nFaces_type_set)
    __swig_setmethods__["f2v"] = _zefr.ExtraGeo_f2v_set
    __swig_getmethods__["f2v"] = _zefr.ExtraGeo_f2v_get
    if _newclass:f2v = _swig_property(_zefr.ExtraGeo_f2v_get, _zefr.ExtraGeo_f2v_set)
    __swig_setmethods__["f2c"] = _zefr.ExtraGeo_f2c_set
    __swig_getmethods__["f2c"] = _zefr.ExtraGeo_f2c_get
    if _newclass:f2c = _swig_property(_zefr.ExtraGeo_f2c_get, _zefr.ExtraGeo_f2c_set)
    __swig_setmethods__["c2f"] = _zefr.ExtraGeo_c2f_set
    __swig_getmethods__["c2f"] = _zefr.ExtraGeo_c2f_get
    if _newclass:c2f = _swig_property(_zefr.ExtraGeo_c2f_get, _zefr.ExtraGeo_c2f_set)
    __swig_setmethods__["iblank_cell"] = _zefr.ExtraGeo_iblank_cell_set
    __swig_getmethods__["iblank_cell"] = _zefr.ExtraGeo_iblank_cell_get
    if _newclass:iblank_cell = _swig_property(_zefr.ExtraGeo_iblank_cell_get, _zefr.ExtraGeo_iblank_cell_set)
    __swig_setmethods__["iblank_face"] = _zefr.ExtraGeo_iblank_face_set
    __swig_getmethods__["iblank_face"] = _zefr.ExtraGeo_iblank_face_get
    if _newclass:iblank_face = _swig_property(_zefr.ExtraGeo_iblank_face_get, _zefr.ExtraGeo_iblank_face_set)
    __swig_setmethods__["nOverFaces"] = _zefr.ExtraGeo_nOverFaces_set
    __swig_getmethods__["nOverFaces"] = _zefr.ExtraGeo_nOverFaces_get
    if _newclass:nOverFaces = _swig_property(_zefr.ExtraGeo_nOverFaces_get, _zefr.ExtraGeo_nOverFaces_set)
    __swig_setmethods__["nWallFaces"] = _zefr.ExtraGeo_nWallFaces_set
    __swig_getmethods__["nWallFaces"] = _zefr.ExtraGeo_nWallFaces_get
    if _newclass:nWallFaces = _swig_property(_zefr.ExtraGeo_nWallFaces_get, _zefr.ExtraGeo_nWallFaces_set)
    __swig_setmethods__["nMpiFaces"] = _zefr.ExtraGeo_nMpiFaces_set
    __swig_getmethods__["nMpiFaces"] = _zefr.ExtraGeo_nMpiFaces_get
    if _newclass:nMpiFaces = _swig_property(_zefr.ExtraGeo_nMpiFaces_get, _zefr.ExtraGeo_nMpiFaces_set)
    __swig_setmethods__["overFaces"] = _zefr.ExtraGeo_overFaces_set
    __swig_getmethods__["overFaces"] = _zefr.ExtraGeo_overFaces_get
    if _newclass:overFaces = _swig_property(_zefr.ExtraGeo_overFaces_get, _zefr.ExtraGeo_overFaces_set)
    __swig_setmethods__["wallFaces"] = _zefr.ExtraGeo_wallFaces_set
    __swig_getmethods__["wallFaces"] = _zefr.ExtraGeo_wallFaces_get
    if _newclass:wallFaces = _swig_property(_zefr.ExtraGeo_wallFaces_get, _zefr.ExtraGeo_wallFaces_set)
    __swig_setmethods__["mpiFaces"] = _zefr.ExtraGeo_mpiFaces_set
    __swig_getmethods__["mpiFaces"] = _zefr.ExtraGeo_mpiFaces_get
    if _newclass:mpiFaces = _swig_property(_zefr.ExtraGeo_mpiFaces_get, _zefr.ExtraGeo_mpiFaces_set)
    __swig_setmethods__["procR"] = _zefr.ExtraGeo_procR_set
    __swig_getmethods__["procR"] = _zefr.ExtraGeo_procR_get
    if _newclass:procR = _swig_property(_zefr.ExtraGeo_procR_get, _zefr.ExtraGeo_procR_set)
    __swig_setmethods__["mpiFidR"] = _zefr.ExtraGeo_mpiFidR_set
    __swig_getmethods__["mpiFidR"] = _zefr.ExtraGeo_mpiFidR_get
    if _newclass:mpiFidR = _swig_property(_zefr.ExtraGeo_mpiFidR_get, _zefr.ExtraGeo_mpiFidR_set)
    __swig_setmethods__["grid_vel"] = _zefr.ExtraGeo_grid_vel_set
    __swig_getmethods__["grid_vel"] = _zefr.ExtraGeo_grid_vel_get
    if _newclass:grid_vel = _swig_property(_zefr.ExtraGeo_grid_vel_get, _zefr.ExtraGeo_grid_vel_set)
    __swig_setmethods__["offset"] = _zefr.ExtraGeo_offset_set
    __swig_getmethods__["offset"] = _zefr.ExtraGeo_offset_get
    if _newclass:offset = _swig_property(_zefr.ExtraGeo_offset_get, _zefr.ExtraGeo_offset_set)
    __swig_setmethods__["Rmat"] = _zefr.ExtraGeo_Rmat_set
    __swig_getmethods__["Rmat"] = _zefr.ExtraGeo_Rmat_get
    if _newclass:Rmat = _swig_property(_zefr.ExtraGeo_Rmat_get, _zefr.ExtraGeo_Rmat_set)
    def __init__(self): 
        this = _zefr.new_ExtraGeo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _zefr.delete_ExtraGeo
    __del__ = lambda self : None;
ExtraGeo_swigregister = _zefr.ExtraGeo_swigregister
ExtraGeo_swigregister(ExtraGeo)

class GpuGeo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GpuGeo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GpuGeo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["coord_nodes"] = _zefr.GpuGeo_coord_nodes_set
    __swig_getmethods__["coord_nodes"] = _zefr.GpuGeo_coord_nodes_get
    if _newclass:coord_nodes = _swig_property(_zefr.GpuGeo_coord_nodes_get, _zefr.GpuGeo_coord_nodes_set)
    __swig_setmethods__["coord_eles"] = _zefr.GpuGeo_coord_eles_set
    __swig_getmethods__["coord_eles"] = _zefr.GpuGeo_coord_eles_get
    if _newclass:coord_eles = _swig_property(_zefr.GpuGeo_coord_eles_get, _zefr.GpuGeo_coord_eles_set)
    __swig_setmethods__["estride"] = _zefr.GpuGeo_estride_set
    __swig_getmethods__["estride"] = _zefr.GpuGeo_estride_get
    if _newclass:estride = _swig_property(_zefr.GpuGeo_estride_get, _zefr.GpuGeo_estride_set)
    __swig_setmethods__["dstride"] = _zefr.GpuGeo_dstride_set
    __swig_getmethods__["dstride"] = _zefr.GpuGeo_dstride_get
    if _newclass:dstride = _swig_property(_zefr.GpuGeo_dstride_get, _zefr.GpuGeo_dstride_set)
    __swig_setmethods__["nstride"] = _zefr.GpuGeo_nstride_set
    __swig_getmethods__["nstride"] = _zefr.GpuGeo_nstride_get
    if _newclass:nstride = _swig_property(_zefr.GpuGeo_nstride_get, _zefr.GpuGeo_nstride_set)
    __swig_setmethods__["iblank_cell"] = _zefr.GpuGeo_iblank_cell_set
    __swig_getmethods__["iblank_cell"] = _zefr.GpuGeo_iblank_cell_get
    if _newclass:iblank_cell = _swig_property(_zefr.GpuGeo_iblank_cell_get, _zefr.GpuGeo_iblank_cell_set)
    __swig_setmethods__["iblank_face"] = _zefr.GpuGeo_iblank_face_set
    __swig_getmethods__["iblank_face"] = _zefr.GpuGeo_iblank_face_get
    if _newclass:iblank_face = _swig_property(_zefr.GpuGeo_iblank_face_get, _zefr.GpuGeo_iblank_face_set)
    def __init__(self): 
        this = _zefr.new_GpuGeo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _zefr.delete_GpuGeo
    __del__ = lambda self : None;
GpuGeo_swigregister = _zefr.GpuGeo_swigregister
GpuGeo_swigregister(GpuGeo)

class CallbackFuncs(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CallbackFuncs, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CallbackFuncs, name)
    __repr__ = _swig_repr
    __swig_setmethods__["get_nodes_per_cell"] = _zefr.CallbackFuncs_get_nodes_per_cell_set
    __swig_getmethods__["get_nodes_per_cell"] = _zefr.CallbackFuncs_get_nodes_per_cell_get
    if _newclass:get_nodes_per_cell = _swig_property(_zefr.CallbackFuncs_get_nodes_per_cell_get, _zefr.CallbackFuncs_get_nodes_per_cell_set)
    __swig_setmethods__["get_nodes_per_face"] = _zefr.CallbackFuncs_get_nodes_per_face_set
    __swig_getmethods__["get_nodes_per_face"] = _zefr.CallbackFuncs_get_nodes_per_face_get
    if _newclass:get_nodes_per_face = _swig_property(_zefr.CallbackFuncs_get_nodes_per_face_get, _zefr.CallbackFuncs_get_nodes_per_face_set)
    __swig_setmethods__["get_receptor_nodes"] = _zefr.CallbackFuncs_get_receptor_nodes_set
    __swig_getmethods__["get_receptor_nodes"] = _zefr.CallbackFuncs_get_receptor_nodes_get
    if _newclass:get_receptor_nodes = _swig_property(_zefr.CallbackFuncs_get_receptor_nodes_get, _zefr.CallbackFuncs_get_receptor_nodes_set)
    __swig_setmethods__["get_face_nodes"] = _zefr.CallbackFuncs_get_face_nodes_set
    __swig_getmethods__["get_face_nodes"] = _zefr.CallbackFuncs_get_face_nodes_get
    if _newclass:get_face_nodes = _swig_property(_zefr.CallbackFuncs_get_face_nodes_get, _zefr.CallbackFuncs_get_face_nodes_set)
    __swig_setmethods__["get_q_index_face"] = _zefr.CallbackFuncs_get_q_index_face_set
    __swig_getmethods__["get_q_index_face"] = _zefr.CallbackFuncs_get_q_index_face_get
    if _newclass:get_q_index_face = _swig_property(_zefr.CallbackFuncs_get_q_index_face_get, _zefr.CallbackFuncs_get_q_index_face_set)
    __swig_setmethods__["donor_inclusion_test"] = _zefr.CallbackFuncs_donor_inclusion_test_set
    __swig_getmethods__["donor_inclusion_test"] = _zefr.CallbackFuncs_donor_inclusion_test_get
    if _newclass:donor_inclusion_test = _swig_property(_zefr.CallbackFuncs_donor_inclusion_test_get, _zefr.CallbackFuncs_donor_inclusion_test_set)
    __swig_setmethods__["donor_frac"] = _zefr.CallbackFuncs_donor_frac_set
    __swig_getmethods__["donor_frac"] = _zefr.CallbackFuncs_donor_frac_get
    if _newclass:donor_frac = _swig_property(_zefr.CallbackFuncs_donor_frac_get, _zefr.CallbackFuncs_donor_frac_set)
    __swig_setmethods__["convert_to_modal"] = _zefr.CallbackFuncs_convert_to_modal_set
    __swig_getmethods__["convert_to_modal"] = _zefr.CallbackFuncs_convert_to_modal_get
    if _newclass:convert_to_modal = _swig_property(_zefr.CallbackFuncs_convert_to_modal_get, _zefr.CallbackFuncs_convert_to_modal_set)
    __swig_setmethods__["get_q_spts"] = _zefr.CallbackFuncs_get_q_spts_set
    __swig_getmethods__["get_q_spts"] = _zefr.CallbackFuncs_get_q_spts_get
    if _newclass:get_q_spts = _swig_property(_zefr.CallbackFuncs_get_q_spts_get, _zefr.CallbackFuncs_get_q_spts_set)
    __swig_setmethods__["get_dq_spts"] = _zefr.CallbackFuncs_get_dq_spts_set
    __swig_getmethods__["get_dq_spts"] = _zefr.CallbackFuncs_get_dq_spts_get
    if _newclass:get_dq_spts = _swig_property(_zefr.CallbackFuncs_get_dq_spts_get, _zefr.CallbackFuncs_get_dq_spts_set)
    __swig_setmethods__["get_q_spts_d"] = _zefr.CallbackFuncs_get_q_spts_d_set
    __swig_getmethods__["get_q_spts_d"] = _zefr.CallbackFuncs_get_q_spts_d_get
    if _newclass:get_q_spts_d = _swig_property(_zefr.CallbackFuncs_get_q_spts_d_get, _zefr.CallbackFuncs_get_q_spts_d_set)
    __swig_setmethods__["get_dq_spts_d"] = _zefr.CallbackFuncs_get_dq_spts_d_set
    __swig_getmethods__["get_dq_spts_d"] = _zefr.CallbackFuncs_get_dq_spts_d_get
    if _newclass:get_dq_spts_d = _swig_property(_zefr.CallbackFuncs_get_dq_spts_d_get, _zefr.CallbackFuncs_get_dq_spts_d_set)
    __swig_setmethods__["get_q_spt"] = _zefr.CallbackFuncs_get_q_spt_set
    __swig_getmethods__["get_q_spt"] = _zefr.CallbackFuncs_get_q_spt_get
    if _newclass:get_q_spt = _swig_property(_zefr.CallbackFuncs_get_q_spt_get, _zefr.CallbackFuncs_get_q_spt_set)
    __swig_setmethods__["get_grad_spt"] = _zefr.CallbackFuncs_get_grad_spt_set
    __swig_getmethods__["get_grad_spt"] = _zefr.CallbackFuncs_get_grad_spt_get
    if _newclass:get_grad_spt = _swig_property(_zefr.CallbackFuncs_get_grad_spt_get, _zefr.CallbackFuncs_get_grad_spt_set)
    __swig_setmethods__["get_q_fpt"] = _zefr.CallbackFuncs_get_q_fpt_set
    __swig_getmethods__["get_q_fpt"] = _zefr.CallbackFuncs_get_q_fpt_get
    if _newclass:get_q_fpt = _swig_property(_zefr.CallbackFuncs_get_q_fpt_get, _zefr.CallbackFuncs_get_q_fpt_set)
    __swig_setmethods__["get_grad_fpt"] = _zefr.CallbackFuncs_get_grad_fpt_set
    __swig_getmethods__["get_grad_fpt"] = _zefr.CallbackFuncs_get_grad_fpt_get
    if _newclass:get_grad_fpt = _swig_property(_zefr.CallbackFuncs_get_grad_fpt_get, _zefr.CallbackFuncs_get_grad_fpt_set)
    __swig_setmethods__["donor_data_from_device"] = _zefr.CallbackFuncs_donor_data_from_device_set
    __swig_getmethods__["donor_data_from_device"] = _zefr.CallbackFuncs_donor_data_from_device_get
    if _newclass:donor_data_from_device = _swig_property(_zefr.CallbackFuncs_donor_data_from_device_get, _zefr.CallbackFuncs_donor_data_from_device_set)
    __swig_setmethods__["fringe_data_to_device"] = _zefr.CallbackFuncs_fringe_data_to_device_set
    __swig_getmethods__["fringe_data_to_device"] = _zefr.CallbackFuncs_fringe_data_to_device_get
    if _newclass:fringe_data_to_device = _swig_property(_zefr.CallbackFuncs_fringe_data_to_device_get, _zefr.CallbackFuncs_fringe_data_to_device_set)
    __swig_setmethods__["unblank_data_to_device"] = _zefr.CallbackFuncs_unblank_data_to_device_set
    __swig_getmethods__["unblank_data_to_device"] = _zefr.CallbackFuncs_unblank_data_to_device_get
    if _newclass:unblank_data_to_device = _swig_property(_zefr.CallbackFuncs_unblank_data_to_device_get, _zefr.CallbackFuncs_unblank_data_to_device_set)
    __swig_setmethods__["get_face_nodes_gpu"] = _zefr.CallbackFuncs_get_face_nodes_gpu_set
    __swig_getmethods__["get_face_nodes_gpu"] = _zefr.CallbackFuncs_get_face_nodes_gpu_get
    if _newclass:get_face_nodes_gpu = _swig_property(_zefr.CallbackFuncs_get_face_nodes_gpu_get, _zefr.CallbackFuncs_get_face_nodes_gpu_set)
    __swig_setmethods__["get_cell_nodes_gpu"] = _zefr.CallbackFuncs_get_cell_nodes_gpu_set
    __swig_getmethods__["get_cell_nodes_gpu"] = _zefr.CallbackFuncs_get_cell_nodes_gpu_get
    if _newclass:get_cell_nodes_gpu = _swig_property(_zefr.CallbackFuncs_get_cell_nodes_gpu_get, _zefr.CallbackFuncs_get_cell_nodes_gpu_set)
    __swig_setmethods__["get_n_weights"] = _zefr.CallbackFuncs_get_n_weights_set
    __swig_getmethods__["get_n_weights"] = _zefr.CallbackFuncs_get_n_weights_get
    if _newclass:get_n_weights = _swig_property(_zefr.CallbackFuncs_get_n_weights_get, _zefr.CallbackFuncs_get_n_weights_set)
    __swig_setmethods__["donor_frac_gpu"] = _zefr.CallbackFuncs_donor_frac_gpu_set
    __swig_getmethods__["donor_frac_gpu"] = _zefr.CallbackFuncs_donor_frac_gpu_get
    if _newclass:donor_frac_gpu = _swig_property(_zefr.CallbackFuncs_donor_frac_gpu_get, _zefr.CallbackFuncs_donor_frac_gpu_set)
    def __init__(self): 
        this = _zefr.new_CallbackFuncs()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _zefr.delete_CallbackFuncs
    __del__ = lambda self : None;
CallbackFuncs_swigregister = _zefr.CallbackFuncs_swigregister
CallbackFuncs_swigregister(CallbackFuncs)


def initialize(*args):
  return _zefr.initialize(*args)
initialize = _zefr.initialize

def set_zefr_object(*args):
  return _zefr.set_zefr_object(*args)
set_zefr_object = _zefr.set_zefr_object

def get_zefr_object():
  return _zefr.get_zefr_object()
get_zefr_object = _zefr.get_zefr_object

def finalize():
  return _zefr.finalize()
finalize = _zefr.finalize

def use_gpus():
  return _zefr.use_gpus()
use_gpus = _zefr.use_gpus

def get_basic_geo_data():
  return _zefr.get_basic_geo_data()
get_basic_geo_data = _zefr.get_basic_geo_data

def get_extra_geo_data():
  return _zefr.get_extra_geo_data()
get_extra_geo_data = _zefr.get_extra_geo_data

def get_gpu_geo_data():
  return _zefr.get_gpu_geo_data()
get_gpu_geo_data = _zefr.get_gpu_geo_data

def get_callback_funcs():
  return _zefr.get_callback_funcs()
get_callback_funcs = _zefr.get_callback_funcs

def get_q_spt(*args):
  return _zefr.get_q_spt(*args)
get_q_spt = _zefr.get_q_spt

def get_grad_spt(*args):
  return _zefr.get_grad_spt(*args)
get_grad_spt = _zefr.get_grad_spt

def get_q_spts(*args):
  return _zefr.get_q_spts(*args)
get_q_spts = _zefr.get_q_spts

def get_dq_spts(*args):
  return _zefr.get_dq_spts(*args)
get_dq_spts = _zefr.get_dq_spts

def get_q_spts_d(*args):
  return _zefr.get_q_spts_d(*args)
get_q_spts_d = _zefr.get_q_spts_d

def get_dq_spts_d(*args):
  return _zefr.get_dq_spts_d(*args)
get_dq_spts_d = _zefr.get_dq_spts_d

def get_q_fpts():
  return _zefr.get_q_fpts()
get_q_fpts = _zefr.get_q_fpts

def get_nodes_per_cell(*args):
  return _zefr.get_nodes_per_cell(*args)
get_nodes_per_cell = _zefr.get_nodes_per_cell

def get_nodes_per_face(*args):
  return _zefr.get_nodes_per_face(*args)
get_nodes_per_face = _zefr.get_nodes_per_face

def get_receptor_nodes(*args):
  return _zefr.get_receptor_nodes(*args)
get_receptor_nodes = _zefr.get_receptor_nodes

def get_face_nodes(*args):
  return _zefr.get_face_nodes(*args)
get_face_nodes = _zefr.get_face_nodes

def get_face_nodes_gpu(*args):
  return _zefr.get_face_nodes_gpu(*args)
get_face_nodes_gpu = _zefr.get_face_nodes_gpu

def get_cell_nodes_gpu(*args):
  return _zefr.get_cell_nodes_gpu(*args)
get_cell_nodes_gpu = _zefr.get_cell_nodes_gpu

def donor_inclusion_test(*args):
  return _zefr.donor_inclusion_test(*args)
donor_inclusion_test = _zefr.donor_inclusion_test

def donor_frac(*args):
  return _zefr.donor_frac(*args)
donor_frac = _zefr.donor_frac

def convert_to_modal(*args):
  return _zefr.convert_to_modal(*args)
convert_to_modal = _zefr.convert_to_modal

def get_q_fpt(*args):
  return _zefr.get_q_fpt(*args)
get_q_fpt = _zefr.get_q_fpt

def get_grad_fpt(*args):
  return _zefr.get_grad_fpt(*args)
get_grad_fpt = _zefr.get_grad_fpt

def donor_data_from_device(*args):
  return _zefr.donor_data_from_device(*args)
donor_data_from_device = _zefr.donor_data_from_device

def fringe_data_to_device(*args):
  return _zefr.fringe_data_to_device(*args)
fringe_data_to_device = _zefr.fringe_data_to_device

def unblank_data_to_device(*args):
  return _zefr.unblank_data_to_device(*args)
unblank_data_to_device = _zefr.unblank_data_to_device

def get_n_weights(*args):
  return _zefr.get_n_weights(*args)
get_n_weights = _zefr.get_n_weights

def donor_frac_gpu(*args):
  return _zefr.donor_frac_gpu(*args)
donor_frac_gpu = _zefr.donor_frac_gpu

def signal_handler(*args):
  return _zefr.signal_handler(*args)
signal_handler = _zefr.signal_handler
# This file is compatible with both classic and new-style classes.


